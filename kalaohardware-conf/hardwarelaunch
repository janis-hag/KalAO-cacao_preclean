#!/bin/bash

set -euo pipefail

MSdescr="KalAO hardware execution script"

source milk-script-std-config

##### Prerequisites
RequiredCommands=( tmux milk )
RequiredFiles=()
RequiredDirs=()

##### parse arguments
source milk-argparse


LOOP_CONFNAME="dmloopsim"
LOOP_WORKDIR=$(<${LOOP_CONFNAME}-conf/WORKDIR)
LOOP_LOOPNAME=$(<${LOOP_CONFNAME}-conf/LOOPNAME)


##### Load infos for dm

DM_CONFNAME="kalaohardware"

DM_WORKDIR=$(<${DM_CONFNAME}-conf/WORKDIR)
DM_LOOPNAME=$(<${DM_CONFNAME}-conf/LOOPNAME)

source ${DM_CONFNAME}-conf/cacaovars.${DM_LOOPNAME}.bash

DM_LOOPWORKDIR=$CACAO_LOOPWORKDIR
DM_CHINDEX=2
DM_DMINDEX=$CACAO_DMINDEX
DM_LOOPNUMBER=$CACAO_LOOPNUMBER
DM_WFSSTREAM=$CACAO_WFSSTREAM

##### Load infos for ttm

TTM_CONFNAME="kalaohardware"

TTM_WORKDIR=$(<${TTM_CONFNAME}-conf/WORKDIR)
TTM_LOOPNAME=$(<${TTM_CONFNAME}-conf/LOOPNAME)

source ${TTM_CONFNAME}-conf/cacaovars.${TTM_LOOPNAME}.bash

TTM_LOOPWORKDIR=$CACAO_LOOPWORKDIR
TTM_CHINDEX=2
TTM_DMINDEX=$CACAO_DMINDEX
TTM_LOOPNUMBER=$CACAO_LOOPNUMBER

#####

if [ $DM_WORKDIR != $TTM_WORKDIR ]
then
	echo "DM and TTM workdir should be the same"
	exit 1
fi

WORKDIR=$TTM_WORKDIR

function sendFPScmd {
  echo "SENDING: $1"
  echo "$1" >> ${MILK_SHM_DIR}/${TTM_CONFNAME}_fpsCTRL.fifo
}

function waitFile {
	echo -n "Waiting $1 "
	while [ ! -f $1 ] ;
	do
		echo -n "."
      	sleep 0.1
	done
	echo " Done"
	sleep 0.1
}

# ======================================================================
# Start all processes
# ======================================================================

stepFile="step.aolaunch.START"
if [ ! -f "$stepFile" ]; then

##### Launch processes common to both loops


mkdir -p ${WORKDIR}/hardware-workdir
#pushd ${WORKDIR}/hardware-workdir
#
#milk-fpsinit -e cacao -C -f ~/kalao-cacao/src/cacao/src/KalAO_BMC/fpslist.txt
#milk-fpsinit -e cacao -C -f ~/kalao-cacao/src/cacao/src/KalAO_Nuvu/fpslist.txt
#milk-fpsinit -e cacao -C -f ~/kalao-cacao/src/cacao/src/KalAO_SHWFS/fpslist.txt
#
#popd

cp -R kalao-hardware_configs/* ${WORKDIR}/hardware-workdir

##### Launch processes dmloopsim

cacao-task-manager -X 4 "${LOOP_CONFNAME}"

##### Launch processes hardware

cacao-task-manager -X 4 "${DM_CONFNAME}"

##### Launch processes ttm loop

cacao-task-manager -X 4 "${TTM_CONFNAME}"

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

exit

##### Start hardware

#sendFPScmd "confwupdate bmc_display"
sendFPScmd "runstart bmc_display"

#sendFPScmd "confwupdate nuvu_acquire"
sendFPScmd "runstart nuvu_acquire"


##### Load dm flat

waitFile "${MILK_SHM_DIR}/dm${DM_DMINDEX}disp00.im.shm"

pushd ${WORKDIR}/hardware-workdir

cacao << EOF
loadfits "flat_dm.fits" dmflat
readshmim dm${DM_DMINDEX}disp00
cpsh dmflat dm${DM_DMINDEX}disp00
exitCLI
EOF

popd

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

# ======================================================================
# Start SHWFS
# ======================================================================

stepFile="step.aolaunch.SHWFS"
if [ ! -f "$stepFile" ]; then

waitFile "${MILK_SHM_DIR}/nuvu_stream.im.shm"

#sendFPScmd "confwupdate shwfs_process"
sendFPScmd "runstart shwfs_process"

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

# ======================================================================
# Close AO loop
# ======================================================================

stepFile="step.aolaunch.LOOPRUN"
if [ ! -f "$stepFile" ]; then

sendFPScmd "waitonrunOFF"

pushd ${WORKDIR}/${DM_LOOPWORKDIR}

cacao << EOF
loadfits "fps.compsCM-1.datadir/sCMat00.fits" sCMat00_1
cpsh sCMat00_1 aol1_CMat
exitCLI
EOF

popd

#sendFPScmd "confwupdate loopRUN-${DM_LOOPNUMBER}"

